---
description: describes how I want the user flow of the application to look like
globs: 
alwaysApply: false
---

# General Context  

# Precursory steps
- Need to be able to login / sign up which should be handled by supabase
- users should have a display name that can be changed in the main lobby
- reconnects should be handled through socket io 
    - if a user disconnect mid-game, the game will pause until the user rejoins or if a minute passes the user's turn will be skipped 
    - include a timer for this minute countdown 

# Task 1: Create / Join a lobby after sign in 
- after sign in, we need to be able to create or join a lobby. Make it so users can create a new lobby and can be given a link or a unique code to join. This should all be in accordance with the database design described in docs/Database.md
- upon creating or joining a lobby, the player will be routed to a new page with that unique lobby. Only users that have joined the game with the code should be able to route to that lobby. 
- on entry, the lobby page should display a list of all the joined players. 

# Task 2: handle dead games + validate lobby join
- we need to be able to handle connections, disconnections, and also handle cleaning up games that never happened. 


# In-game requirements: 
- users should have a placeholder icon that represents a player 
- players should be evenly distributed in a circle on the screen 
    - this should resemble a board game being played in real life and should be adaptable for each possible # of players that can play coup
- a player should be able to see what cards they have, but will not be able to see what cards other people have
